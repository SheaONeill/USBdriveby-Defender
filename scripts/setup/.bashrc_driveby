
#--------------------------------------------------------------------------------------
#
# USB Driveby Defender
#
#
#---------------------

# note
# we could always create a new file bash_driveby_defender
if [ -f ~/.bash_driveby_defender ]; then
    . ~/.bash_driveby_defender
fi

#set the log path variable
LOG_PATH="/var/log/driveby_defender/"

#check if .keyboard_flag exists
if [ -f ${LOG_PATH}.keyboard_flag ]; then
    #script import to get paths and log details
    source /usr/local/bin/export_paths.sh "63-usb-kbd.rules" "keyboard_details.log" "/sys/bus/usb/drivers/usbhid/" ".keyboard_flag"
    #check to see if flag is set
    if  [[ $(head -1 ${LOG_PATH}${FLAG}) == 1 ]] ;then
        source /usr/local/bin/log_details.sh $BASH_SOURCE "Setting_keyboard_paths"
	    #call get_input.sh
        /usr/local/bin/get_input.sh
    elif  [[ $(head -1 ${LOG_PATH}${FLAG}) == 0 ]] ;then
        sleep 1
    fi
fi
#
#check if .flash_flag exists
if [ -f ${LOG_PATH}.flash_flag ] ; then
    #script import to get paths and log details
    source /usr/local/bin/export_paths.sh "81-usb-flash.rules" "flash_details.log" "/sys/bus/usb/drivers/usb-storage/" ".flash_flag"
     
    #check to see if flag is set
    if  [[ $(head -1 ${LOG_PATH}${FLAG}) == 1 ]] ;then
	    source /usr/local/bin/log_details.sh $BASH_SOURCE "Setting_flash_paths"
	    #call get_input.sh
        /usr/local/bin/get_input.sh
    elif  [[ $(head -1 ${LOG_PATH}${FLAG}) == 0 ]] ;then
        sleep 1        
    fi

fi
#--------------------------------------------------------------------------------------
